name: Create Pre-Release

# Controls when the workflow will run
on:
  workflow_dispatch

jobs:
  # This workflow will do three things:
  # 1) it creates a release commit and tag on `develop`
  # 2) it merges the release into `main` (the prerelease branch)
  # 3) it fast-forwards `origin/{release}` and pushes the tag in an atomic operation


  increment-patch:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # checkout develop branch
      - uses: actions/checkout@v3
        with:
          ref: "main"
          fetch-depth: 0
          token: ${{ secrets.NIX_GIT_TOKEN }}

      - name: Setup Git for Commits
        run: |
          git config --global user.name 'Flox Release (floxbot)'
          git config --global user.email 'technology@floxdev.com'

      # TODO: eventually replace with install flox action
      - name: Install Nix
        uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: extra-access-tokens = github.com=${{ secrets.NIX_GIT_TOKEN }}

      - name: Tag new releases
        id: tag
        run: |
          nix develop .#ci \
            -c cz bump --yes

          echo "TAG=$(git describe --abbrev=0 --tags)" >> $GITHUB_OUTPUT

      - name: "Push `${{ steps.tag.outputs.TAG }} (tag), main (branch)"
        run: |
          git push --atomic origin ${{ steps.tag.outputs.TAG }} main
